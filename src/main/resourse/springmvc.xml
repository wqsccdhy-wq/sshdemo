<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <!-- 启动注解驱动的spring MVC功能,注册请求url和注解POJO类方法的映射 -->
    <mvc:default-servlet-handler/>
    <mvc:annotation-driven/>
    <context:component-scan
            base-package="com">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <!-- 解决中文乱码-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 对模型视图名称的解析,在请求时模型视图名称添加前后缀 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>      <!-- 前缀 -->
        <property name="suffix" value=".html"/>   <!-- 后缀 -->
    </bean>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize"><value>10000000</value></property>
        <property name="defaultEncoding"><value>UTF-8</value></property>
    </bean>
    <!--配置拦截器 -->
    <!--<mvc:interceptors>-->
    <!--<mvc:interceptor>-->
    <!--&lt;!&ndash; 拦截所有mvc控制器 &ndash;&gt;-->
    <!--<mvc:mapping path="/**"/>-->
    <!--&lt;!&ndash; mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在-->
    <!--LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) &ndash;&gt;-->
    <!--<mvc:exclude-mapping path="/user/login"/>-->
    <!--<bean class="com.interceptor.LoginInterceptor"></bean>-->
    <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
    <!--这里是对静态资源的映射 -->
    <mvc:resources mapping="/js/**" location="/resources/js/"/>
    <mvc:resources mapping="/css/**" location="/resources/css/"/>
    <mvc:resources mapping="/img/**" location="/resources/img/"/>

</beans>
